---
swagger: '2.0'
info:
  description: 'API that serves as a proxy to access elasticsearch'
  version: '1.0.0'
  title: 'Elasticsearch Proxy API'
  contact:
    email: 'chembl-help@ebi.ac.uk'
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
#host: Will be set dynamically by Swagger Description Blueprint
#basePath: Will be set dynamically by Swagger Description Blueprint
tags:
- name: 'ES proxy'
  description: 'Endpoints related to proxying elasticsearch'
- name: 'Properties Configuration'
  description: 'Endpoints related to the properties configuration'
schemes:
- "https"
- "http"
tags:
- name: Get ES Data
  description: Endpoint to get data from ES
paths:
  /es_data/get_es_data:
    post:
      tags:
        - 'ES proxy'
      summary: 'Get data from elasticsearch'
      description: 'Returns data from elasticsearch'
      operationId: 'get_es_data'
      produces:
        - 'application/json'
      parameters:
        - name: 'index_name'
          in: 'formData'
          description: 'name of the index to query'
          required: true
          type: 'string'
          default: 'chembl_molecule'
        - name: 'es_query'
          in: 'formData'
          description: 'stringifyied version of the query to send to elasticsearch'
          required: true
          type: 'string'
          default: "{'size': 24, 'from': 0, 'query': {'bool': {'must': [{'query_string': {'analyze_wildcard': True, 'query': '*'}}], 'filter': []}}, 'sort': []}"
        - name: 'context_obj'
          in: 'formData'
          description: 'stringifyied version of a JSON object describing the context of the query'
          type: 'string'
        - name: 'contextual_sort_data'
          in: 'formData'
          description: 'description of sorting if sorting by contextual properties'
          type: 'string'
      responses:
        '200':
          description: "successful operation"
          schema:
            $ref: '#/definitions/ESProxyResponse'
  /es_data/get_es_document/{index_name}/{doc_id}:
    get:
      tags:
        - 'ES proxy'
      summary: 'Get a document from elasticsearch'
      description: 'Returns the data of a document from elasticsearch'
      operationId: 'get_es_document'
      produces:
        - 'application/json'
      parameters:
        - name: "index_name"
          in: "path"
          description: "name of the index to which the document belongs"
          required: true
          type: 'string'
          default: 'chembl_molecule'
        - name: "doc_id"
          in: "path"
          description: "ID of the document to check"
          required: true
          type: 'string'
          default: 'CHEMBL59'
      responses:
        '200':
          description: "success"
          schema:
            $ref: '#/definitions/EsDocResponse'
  /properties_configuration/id_properties/{index_name}:
    get:
      tags:
        - 'Properties Configuration'
      summary: 'Returns the id properties of an index'
      description: 'Returns the list of properties that identify each item in an index'
      operationId: 'get_index_id_property'
      produces:
        - 'application/json'
      parameters:
        - name: "index_name"
          in: "path"
          description: "name of the index for which to get the id properties"
          required: true
          type: 'string'
          default: 'chembl_molecule'
      responses:
        '200':
          description: "success"
          schema:
            $ref: '#/definitions/IDPropertiesResponse'
  /properties_configuration/property/{index_name}/{property_id}:
    get:
      tags:
        - 'Properties Configuration'
      summary: 'Get the configuration of a single property'
      description: 'Returns the standard description for the interface of a single property'
      operationId: 'get_property_configuration'
      produces:
        - 'application/json'
      parameters:
        - name: "index_name"
          in: "path"
          description: "name of the index to which the property belongs"
          required: true
          type: 'string'
          default: 'chembl_molecule'
        - name: "property_id"
          in: "path"
          description: "ID of the property to check, e.g. molecule_properties.cx_most_bpka"
          required: true
          type: 'string'
          default: 'molecule_properties.aromatic_rings'
      responses:
        '200':
          description: "success"
          schema:
            $ref: '#/definitions/PropertyConfigResponse'
  /properties_configuration/group/{index_name}/{group_name}:
    get:
      tags:
        - 'Properties Configuration'
      summary: 'Get the configuration of a group of properties'
      description: 'Returns the standard description for the interface of a group of properties'
      operationId: 'get_group_configuration'
      produces:
        - 'application/json'
      parameters:
        - name: "index_name"
          in: "path"
          description: "name of the index to which the group belongs"
          required: true
          type: 'string'
          default: 'chembl_molecule'
        - name: "group_name"
          in: "path"
          description: "ID of the group to check, e.g. browser_table"
          required: true
          type: 'string'
          default: 'browser_table'
      responses:
        '200':
          description: "success"
          schema:
            $ref: '#/definitions/GroupConfigResponse'
  /properties_configuration/facets/{index_name}/{group_name}:
    get:
      tags:
        - 'Properties Configuration'
      summary: 'Get the configuration of a group of facets'
      description: 'Returns the standard description for the interface of a group of facets'
      operationId: 'get_facet_group_configuration'
      produces:
        - 'application/json'
      parameters:
        - name: "index_name"
          in: "path"
          description: "name of the index to which the group belongs"
          required: true
          type: 'string'
          default: 'chembl_activity'
        - name: "group_name"
          in: "path"
          description: "ID of the group to check, e.g. browser_facets"
          required: true
          type: 'string'
          default: 'browser_facets'
      responses:
        '200':
          description: "success"
          schema:
            $ref: '#/definitions/GroupConfigResponse'
definitions:
  ESProxyResponse:
    type: 'object'
    properties:
      es_response:
        type: 'object'
      metadata:
        type: 'object'
  PropertyConfigResponse:
    type: 'object'
    properties:
      index_name:
        type: 'string'
      label:
        type: 'string'
      type:
        type: 'string'
      label_mini:
        type: 'string'
      aggregatable:
        type: 'boolean'
      prop_id:
        type: 'string'
      sortable:
        type: 'boolean'
  GroupConfigResponse:
    type: 'object'
    properties:
      properties:
        type: 'object'
        properties:
          optional:
            type: 'object'
          default:
            type: 'object'
  FacetsGroupConfigResponse:
    type: 'object'
    properties:
      properties:
        type: 'object'
        properties:
          optional:
            type: 'object'
          default:
            type: 'object'
  EsDocResponse:
    type: 'object'
  IDPropertiesResponse:
    type: 'array'

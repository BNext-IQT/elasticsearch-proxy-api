---
swagger: '2.0'
info:
  description: 'API that serves as a proxy to access elasticsearch'
  version: '1.0.0'
  title: 'Elasticsearch Proxy API'
  contact:
    email: 'chembl-help@ebi.ac.uk'
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
#host: Will be set dynamically by Swagger Description Blueprint
#basePath: Will be set dynamically by Swagger Description Blueprint
tags:
- name: 'ES proxy'
  description: 'Endpoints related to proxying elasticsearch'
- name: 'Properties Configuration'
  description: 'Endpoints related to the properties configuration'
- name: 'Contexts'
  description: 'Endpoints related to the contextual data, e.g. Similarity search results, substructure search results, etc.'
- name: 'Free Text Search'
  description: 'Endpoints related to the free text search parsing.'
- name: 'URL Shortening'
  description: 'Endpoints related to the shortening of urls'
- name: 'Frontend Element Tracking'
  description: 'Endpoints related to the tracking of elements in the frontend'
- name: 'Visualisations'
  description: 'Endpoints to obtain data for visualisations'
schemes:
- "https"
- "http"
paths:
  /es_data/get_es_data:
    post:
      tags:
        - 'ES proxy'
      summary: 'Get data from elasticsearch'
      description: 'Returns data from elasticsearch'
      operationId: 'get_es_data'
      produces:
        - 'application/json'
      parameters:
        - name: 'index_name'
          in: 'formData'
          description: 'name of the index to query'
          required: true
          type: 'string'
          default: 'chembl_molecule'
        - name: 'es_query'
          in: 'formData'
          description: 'stringifyied version of the query to send to elasticsearch'
          required: true
          type: 'string'
          default: "{'size': 24, 'from': 0, 'query': {'bool': {'must': [{'query_string': {'analyze_wildcard': True, 'query': '*'}}], 'filter': []}}, 'sort': []}"
        - name: 'context_obj'
          in: 'formData'
          description: 'stringifyied version of a JSON object describing the context of the query'
          type: 'string'
        - name: 'contextual_sort_data'
          in: 'formData'
          description: 'description of sorting if sorting by contextual properties'
          type: 'string'
      responses:
        '200':
          description: "successful operation"
          schema:
            $ref: '#/definitions/ESProxyResponse'
  /es_data/get_es_document/{index_name}/{doc_id}:
    get:
      tags:
        - 'ES proxy'
      summary: 'Get a document from elasticsearch'
      description: 'Returns the data of a document from elasticsearch'
      operationId: 'get_es_document'
      produces:
        - 'application/json'
      parameters:
        - name: "index_name"
          in: "path"
          description: "name of the index to which the document belongs"
          required: true
          type: 'string'
          default: 'chembl_molecule'
        - name: "doc_id"
          in: "path"
          description: "ID of the document to check"
          required: true
          type: 'string'
          default: 'CHEMBL59'
      responses:
        '200':
          description: "success"
          schema:
            $ref: '#/definitions/EsDocResponse'
  /properties_configuration/id_properties/{index_name}:
    get:
      tags:
        - 'Properties Configuration'
      summary: 'Returns the id properties of an index'
      description: 'Returns the list of properties that identify each item in an index'
      operationId: 'get_index_id_property'
      produces:
        - 'application/json'
      parameters:
        - name: "index_name"
          in: "path"
          description: "name of the index for which to get the id properties"
          required: true
          type: 'string'
          default: 'chembl_molecule'
      responses:
        '200':
          description: "success"
          schema:
            $ref: '#/definitions/IDPropertiesResponse'
  /properties_configuration/property/{index_name}/{property_id}:
    get:
      tags:
        - 'Properties Configuration'
      summary: 'Get the configuration of a single property'
      description: 'Returns the standard description for the interface of a single property'
      operationId: 'get_property_configuration'
      produces:
        - 'application/json'
      parameters:
        - name: "index_name"
          in: "path"
          description: "name of the index to which the property belongs"
          required: true
          type: 'string'
          default: 'chembl_molecule'
        - name: "property_id"
          in: "path"
          description: "ID of the property to check, e.g. molecule_properties.cx_most_bpka"
          required: true
          type: 'string'
          default: 'molecule_properties.aromatic_rings'
      responses:
        '200':
          description: "success"
          schema:
            $ref: '#/definitions/PropertyConfigResponse'
  /properties_configuration/group/{index_name}/{group_name}:
    get:
      tags:
        - 'Properties Configuration'
      summary: 'Get the configuration of a group of properties'
      description: 'Returns the standard description for the interface of a group of properties'
      operationId: 'get_group_configuration'
      produces:
        - 'application/json'
      parameters:
        - name: "index_name"
          in: "path"
          description: "name of the index to which the group belongs"
          required: true
          type: 'string'
          default: 'chembl_molecule'
        - name: "group_name"
          in: "path"
          description: "ID of the group to check, e.g. browser_table"
          required: true
          type: 'string'
          default: 'browser_table'
      responses:
        '200':
          description: "success"
          schema:
            $ref: '#/definitions/GroupConfigResponse'
  /properties_configuration/facets/{index_name}/{group_name}:
    get:
      tags:
        - 'Properties Configuration'
      summary: 'Get the configuration of a group of facets'
      description: 'Returns the standard description for the interface of a group of facets'
      operationId: 'get_facet_group_configuration'
      produces:
        - 'application/json'
      parameters:
        - name: "index_name"
          in: "path"
          description: "name of the index to which the group belongs"
          required: true
          type: 'string'
          default: 'chembl_activity'
        - name: "group_name"
          in: "path"
          description: "ID of the group to check, e.g. browser_facets"
          required: true
          type: 'string'
          default: 'browser_facets'
      responses:
        '200':
          description: "success"
          schema:
            $ref: '#/definitions/GroupConfigResponse'
  /properties_configuration/all_properties/{index_name}:
    get:
      tags:
        - 'Properties Configuration'
      summary: 'Get all the properties configured for an index'
      description: 'Returns a list of all the properties configured (being used) for an index'
      operationId: 'get_all_configured_properties'
      produces:
        - 'application/json'
      parameters:
        - name: "index_name"
          in: "path"
          description: "name of the index for which to get the properties"
          required: true
          type: 'string'
          default: 'chembl_molecule'
      responses:
        '200':
          description: "success"
          schema:
            $ref: '#/definitions/AllConfiguredPropertiesResponse'
  /contexts/get_context_data:
    post:
      tags:
        - 'Contexts'
      summary: 'Get data from a context'
      description: 'Returns the data corresponding to the context described in the parameters'
      operationId: 'get_context_data'
      produces:
        - 'application/json'
      parameters:
        - name: "context_type"
          in: "formData"
          description: "Type of the context to load, refers to the type of search for which to get the results"
          required: true
          type: 'string'
          default: 'SIMILARITY'
          enum: ['SIMILARITY', 'SUBSTRUCTURE', 'CONNECTIVITY', 'BLAST']
        - name: "context_id"
          in: "formData"
          description: "ID of the context. The id of the search job for which to load the results"
          required: true
          type: 'string'
          default: 'STRUCTURE_SEARCH-Ni1rjATkIGNsRJW-ajYLJrTM2yFfIJefN2HAFSQe4uE='
        - name: "delayed_jobs_base_url"
          in: "formData"
          description: "URL of the Delayed Jobs used to run the job (STAGING, PROD, etc...)
          so I know from which env load the results"
          required: true
          type: 'string'
          default: 'https://www.ebi.ac.uk/chembl/interface_api/delayed_jobs'
          enum: ['https://www.ebi.ac.uk/chembl/interface_api/delayed_jobs',
          'http://www.ebi.ac.uk/chembl/interface_api/delayed_jobs',
          'https://wwwdev.ebi.ac.uk/chembl/interface_api/delayed_jobs',
          'http://wwwdev.ebi.ac.uk/chembl/interface_api/delayed_jobs']
      responses:
        '200':
          description: "success"
          schema:
            $ref: '#/definitions/ContextResponse'
  /search_parsing/parse_free_text_search:
    post:
      tags:
        - 'Free Text Search'
      summary: 'Parses a free text search'
      description: 'From a text term, it returns the query that corresponds to that term'
      operationId: 'parse_free_text_search'
      produces:
        - 'application/json'
      parameters:
        - name: 'search_term'
          in: 'formData'
          description: 'Term to parse'
          required: true
          type: 'string'
          default: 'MDCK'
        - name: 'es_indexes'
          in: 'formData'
          description: 'indexes in which the search will be done, separated by a comma'
          required: true
          type: 'string'
          default: 'chembl_molecule,chembl_target,chembl_assay,chembl_document,chembl_cell_line,chembl_tissue'
        - name: 'selected_es_index'
          in: 'formData'
          description: 'es index to focus on'
          type: 'string'
      responses:
        '200':
          description: "successful operation"
          schema:
            $ref: '#/definitions/SearchParseResponse'
  /url_shortening/shorten_url:
    post:
      tags:
        - 'URL Shortening'
      summary: 'Shorten a url'
      description: 'Returns a short hash of an url'
      operationId: 'shorten_url'
      produces:
        - 'application/json'
      parameters:
        - name: 'long_url'
          in: 'formData'
          description: 'long version of the url to shorten'
          required: true
          type: 'string'
          default: '#substructure_search_results/C[C@H](CCc1ccccc1)NC[C@H](O)c1ccc(O)c(C(N)=O)c1'
      responses:
        '200':
          description: "successful operation"
          schema:
            $ref: '#/definitions/ShortenedURLResponse'
  /url_shortening/expand_url/{hash}:
    get:
      tags:
        - 'URL Shortening'
      summary: 'Expand a hash'
      description: 'Returns the url corresponding to the hash'
      operationId: 'expand_url'
      produces:
        - 'application/json'
      parameters:
        - name: 'url_hash'
          in: 'path'
          description: 'hash of the url to expand'
          required: true
          type: 'string'
          default: 'Q29IOwX-ZUGyyB6GXDjwZw=='
      responses:
        '200':
          description: "successful operation"
          schema:
            $ref: '#/definitions/ExpandedURLResponse'
  /frontend_element_usage/register_element_usage:
    post:
      tags:
        - 'Frontend Element Tracking'
      summary: 'Register usage of a frontend element'
      description: 'Register usage of a frontend element'
      operationId: 'register_element_usage'
      produces:
        - 'application/json'
      parameters:
        - name: 'view_name'
          in: 'formData'
          description: 'name of the element for which to register usage'
          required: true
          type: 'string'
          default: 'Compound-CompoundNameAndClassification'
        - name: 'view_type'
          in: 'formData'
          description: 'Card of the element for which to register usage'
          required: true
          type: 'string'
          default: 'CARD'
        - name: 'entity_name'
          in: 'formData'
          description: 'Name of the entity involved'
          required: true
          type: 'string'
          default: 'Compound'
      responses:
        '200':
          description: "successful operation"
          schema:
            $ref: '#/definitions/UsageRegisteredResult'
  /visualisations/target_classifications/protein_classification:
    get:
      tags:
        - 'Visualisations'
      summary: 'Get the Protein Target classification tree'
      description: 'Returns the Protein Target classification tree'
      operationId: 'get_protein_target_classification'
      produces:
        - 'application/json'
      responses:
        '200':
          description: "success"
          schema:
            $ref: '#/definitions/ProteinTargetClassificationResponse'
  /visualisations/target_classifications/organism_taxonomy:
    get:
      tags:
        - 'Visualisations'
      summary: 'Get the Target Organism Taxonomy tree'
      description: 'Returns the Target Organism Taxonomy tree'
      operationId: 'get_organism_taxonomy_target_classifications'
      produces:
        - 'application/json'
      responses:
        '200':
          description: "success"
          schema:
            $ref: '#/definitions/OrganismTaxonomyTargetClassificationResponse'
  /visualisations/target_classifications/go_slim:
    get:
      tags:
        - 'Visualisations'
      summary: 'Get the Target GO Slim tree'
      description: 'Returns the Target GO Slim tree'
      operationId: 'get_go_slim_target_classifications'
      produces:
        - 'application/json'
      responses:
        '200':
          description: "success"
          schema:
            $ref: '#/definitions/GOSlimTargetClassificationResponse'
  /visualisations/assay_classifications/in_vivo:
    get:
      tags:
        - 'Visualisations'
      summary: 'Get the In Vivo Assay classification tree'
      description: 'Returns the In Vivo Assay classification tree'
      operationId: 'get_in_vivo_assay_classifications'
      produces:
        - 'application/json'
      responses:
        '200':
          description: "success"
          schema:
            $ref: '#/definitions/InvivoAssayClassificationResponse'
  /visualisations/database_summary:
    get:
      tags:
        - 'Visualisations'
      summary: 'Get the summary of the counts of the entities in the database'
      description: 'Returns the summary of the counts of the entities in the database'
      operationId: 'get_database_summary'
      produces:
        - 'application/json'
      responses:
        '200':
          description: "success"
          schema:
            $ref: '#/definitions/DatabaseSummaryResponse'
  /visualisations/entities_records:
    get:
      tags:
        - 'Visualisations'
      summary: 'Get the summary of the counts of the entities in the database'
      description: 'Returns the summary of the counts of the entities in the database'
      operationId: 'get_entities_records'
      produces:
        - 'application/json'
      responses:
        '200':
          description: "success"
          schema:
            $ref: '#/definitions/EntitiesRecordsResponse'
  /visualisations/covid_entities_records:
    get:
      tags:
        - 'Visualisations'
      summary: 'Get the summary of the counts of the entities in the database related to the COVID-19'
      description: 'Returns the summary of the counts of the entities in the database related to the COVID-19'
      operationId: 'get_covid_entities_records'
      produces:
        - 'application/json'
      responses:
        '200':
          description: "success"
          schema:
            $ref: '#/definitions/COVIDEntitiesRecordsResponse'
definitions:
  ESProxyResponse:
    type: 'object'
    properties:
      es_response:
        type: 'object'
      metadata:
        type: 'object'
  PropertyConfigResponse:
    type: 'object'
    properties:
      index_name:
        type: 'string'
      label:
        type: 'string'
      type:
        type: 'string'
      label_mini:
        type: 'string'
      aggregatable:
        type: 'boolean'
      prop_id:
        type: 'string'
      sortable:
        type: 'boolean'
  GroupConfigResponse:
    type: 'object'
    properties:
      properties:
        type: 'object'
        properties:
          optional:
            type: 'object'
          default:
            type: 'object'
  AllConfiguredPropertiesResponse:
    type: 'object'
    properties:
      all_properties:
        type: 'array'
  FacetsGroupConfigResponse:
    type: 'object'
    properties:
      properties:
        type: 'object'
        properties:
          optional:
            type: 'object'
          default:
            type: 'object'
  EsDocResponse:
    type: 'object'
  IDPropertiesResponse:
    type: 'array'
  ContextResponse:
    type: 'object'
  SearchParseResponse:
    type: 'object'
    properties:
      parsed_query:
        type: 'object'
      best_es_base_queries:
        type: 'object'
      sorted_indexes_by_score:
        type: 'object'
  ShortenedURLResponse:
    type: 'object'
    properties:
      expires:
        type: 'string'
      hash:
        type: 'string'
  ExpandedURLResponse:
    type: 'object'
    properties:
      long_url:
        type: 'string'
      expires:
        type: 'string'
  AdminOperationResult:
    type: "object"
    properties:
      operation_result:
        type: 'string'
  UsageRegisteredResult:
    type: "object"
    properties:
      operation_result:
        type: 'string'
  ProteinTargetClassificationResponse:
    type: "object"
  OrganismTaxonomyTargetClassificationResponse:
    type: "object"
  GOSlimTargetClassificationResponse:
    type: "object"
  InvivoAssayClassificationResponse:
    type: "object"
  DatabaseSummaryResponse:
    type: "object"
  EntitiesRecordsResponse:
    type: "object"
  COVIDEntitiesRecordsResponse:
    type: "object"
